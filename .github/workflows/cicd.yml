name: CI/CD action

on:
    push:
        branches: [main]

jobs:
    testing:
        runs-on: ubuntu-latest
        env:
            PG_NAME: ${{ secrets.PG_NAME }}
            PG_USER: ${{ secrets.PG_USER }}
            PG_HOST: ${{ secrets.PG_HOST }}
            PG_PORT: ${{ secrets.PG_PORT }}
            PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
        services:
            postgres_nmain:
                image: postgres:latest
                env:
                    POSTGRES_USERS: ${{ env.PG_USER }}
                    POSTGRES_PASSWORD: ${{ env.PG_PASSWORD }}
                    POSTGRES_DB: ${{ env.PG_NAME }}
                ports:
                    - 5432:5432
                options:
                    --health-cmd pg_isready
                    --health-interval 5s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: Проверка изменения
              uses: actions/checkout@v2

            - name: Install python
              uses: actions/setup-python@v5
              with:
                  python-version: 3.12

            - name: Install requirements
              run: pip install -r requirements.txt

            - name: The Linter
              run: flake8 --exclude migrations --ignore E501,F401,E302,W293,W391,W292,E301
            - name: Tests
              run: python manage.py test
              env:
                PG_NAME: ${{ env.PG_NAME }}
                PG_USER: ${{ env.PG_USER }}
                PG_HOST: ${{ env.PG_HOST }}
                PG_PORT: ${{ env.PG_PORT }}
                PG_PASSWORD: ${{ env.PG_PASSWORD }}

    deploy:
        runs-on: ubuntu-latest
        needs: testing
        steps:
            - name: Deploy
              uses: appleboy/ssh-action@master
              with:
                  host: 83.166.245.38
                  username: root
                  password: IV3viw6nwNEJN7CQ
                  script: |
                    cd /home/ubuntu/stock-product
                    git pull
                    sudo systemctl restart gunicorn